<?xml version="1.0" encoding="UTF-8"?>
<model xmlns="http://dbfound.googlecode.com/model" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dbfound.googlecode.com/model https://raw.githubusercontent.com/nfwork/dbfound/master/tags/model.xsd">

	<param name="book_id" dataType="number" scope="session" />

	<query>
		<sql>
		 <![CDATA[
			 select t.item_id,
			 		t.item_num,
					t.period_id,
					t.regist_user_id,
					(select user_name from sys_user u where u.user_id = t.regist_user_id) regiest_user,
					t.regist_time,
					t.exp_time,
					t.description,
					p.period_name
			   from exp_item t,exp_period p
			  where t.period_id = p.period_id
			  and t.book_id = ${@book_id}
			  and p.book_id = ${@book_id}
			  #AND_CLAUSE#
			  order by item_id
		 ]]>
		</sql>
		<filter name="item_num" express="t.item_num = ${@item_num}" />
		<filter name="period_id" express="t.period_id = ${@period_id}" />
		<filter name="account_id" express="EXISTS (select 1 from exp_item_line l
											                   where l.item_id = t.item_id
											                   and l.book_id =  ${@book_id}
											                   and l.account_id = ${@account_id} )" />
		<filter name="description" express="t.description like concat('%',${@description},'%')" />
		<filter name="timefrom" express="t.exp_time &gt;= ${@timefrom}" />
		<filter name="timeto" express="t.exp_time &lt;= ${@timeto}" />
	</query>
	
	<query name="getDeatil">
		<param name="item_id" dataType="number" />
		<sql>
		 <![CDATA[
			 select *,
			        (select user_name from sys_user u where u.user_id = t.regist_user_id) add_user
			   from exp_item t
			  where t.item_id = ${@item_id}
				and t.book_id =  ${@book_id}
		 ]]>
		</sql>
	</query>

	<execute name="saveHeaderAndLine">
		<param name="lines_size" sourcePath="lines.size" dataType="number" />
		<sqls>
			<collisionSql where="${@period_id} is null" message="会计期间不能为空！"/>
			<collisionSql where="${@exp_time} is null" message="费用日期不能为空！"/>
			<collisionSql where="${@description} is null" message="凭证描述不能为空！"/>
			<collisionSql where="ifnull(${@lines_size},0) = 0" message="凭证行不能为空！"/>
			<execute name="save"/>
			<batchSql sourcePath="param.lines">
				<execute modelName="exp/itemLine" name="save"/>
			</batchSql>
		</sqls>
	</execute>

	<execute name="simpleSave">
		<sqls>
			<collisionSql where="${@period_id} is null" message="会计期间不能为空！"/>
			<collisionSql where="${@exp_time} is null" message="费用日期不能为空！"/>
			<collisionSql where="${@dr_account_id} is null" message="借方科目不能为空！"/>
			<collisionSql where="${@cr_account_id} is null" message="贷方科目不能为空！"/>
			<collisionSql where="${@amount} is null" message="金额不能为空！"/>
			<collisionSql where="${@description} is null" message="凭证描述不能为空！"/>

			<execute name="save"/>
			<setContextData name="description" value="" inCurrentPath="true"/>

			<setContextData name="dr_amount" param="amount" inCurrentPath="true"/>
			<setContextData name="account_id" param="dr_account_id" inCurrentPath="true"/>
			<execute modelName="exp/itemLine" name="add"/>

			<setContextData name="dr_amount" value="" inCurrentPath="true"/>
			<setContextData name="cr_amount" param="amount" inCurrentPath="true"/>
			<setContextData name="account_id" param="cr_account_id" inCurrentPath="true"/>
			<execute modelName="exp/itemLine" name="add"/>
		</sqls>
	</execute>

	<execute name="save">
		<param name="item_id" dataType="number" ioType="both"/>
		<param name="item_num" dataType="number"/>
		<param name="period_id" dataType="number" />
		<param name="regist_user_id" dataType="number" sourcePath="session.user_id" />
		<param name="exp_time" dataType="varchar" />
		<param name="description" dataType="varchar" />
		<sqls>
			<whenSql when="${@item_id} is not null">
				<collisionSql where="not exists (select 1 from exp_item where book_id = ${@book_id} and item_id =${@item_id})" message="凭证ID信息异常" />
				<executeSql>
				  <![CDATA[
					update exp_item
					   set 
						period_id = ${@period_id},
						description = ${@description},
						exp_time = ${@exp_time}		
					 where item_id = ${@item_id}
					   and book_id = ${@book_id}
				  ]]>
				</executeSql>
			</whenSql>
			<otherwiseSql>
				<executeSql>
					update exp_book set item_num_index = item_num_index + 1
					where book_id = ${@book_id}
				</executeSql>
				<querySql>
					select item_num_index as item_num from exp_book where book_id = ${@book_id}
				</querySql>
				<executeSql generatedKeyParam="item_id">
					<![CDATA[
					insert into exp_item(
					    item_num,
			    		period_id,
			    		regist_user_id,
			    		regist_time,
			    		description,
			    		exp_time,
					    book_id)
					values(
					    ${@item_num},
			    		${@period_id},
			    		${@regist_user_id},
			    		now(),
			    		${@description},
			    		${@exp_time},
					    ${@book_id})
				  ]]>
				</executeSql>
			</otherwiseSql>
		</sqls>
	</execute>
	
	<execute name="delete">
		<param name="item_id" dataType="number" />
		<sqls>
			<executeSql>
			  <![CDATA[
				delete from exp_item where item_id = ${@item_id}  and book_id = ${@book_id}
			  ]]>
			</executeSql>
			<executeSql>
			  <![CDATA[
				delete from exp_item_line where item_id = ${@item_id} and book_id = ${@book_id}
			  ]]>
			</executeSql>
		</sqls>
	</execute>
</model>
